


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 头文件
#include <Windows.h>
#include "stdio.h"
#include "tchar.h"
#include <string.h>
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
#pragma comment(linker, "/EXPORT:viGetDefaultRM=_AheadLib_viGetDefaultRM,@128")
#pragma comment(linker, "/EXPORT:viFindRsrc=_AheadLib_viFindRsrc,@129")
#pragma comment(linker, "/EXPORT:viFindNext=_AheadLib_viFindNext,@130")
#pragma comment(linker, "/EXPORT:viOpen=_AheadLib_viOpen,@131")
#pragma comment(linker, "/EXPORT:viClose=_AheadLib_viClose,@132")
#pragma comment(linker, "/EXPORT:viGetAttribute=_AheadLib_viGetAttribute,@133")
#pragma comment(linker, "/EXPORT:viSetAttribute=_AheadLib_viSetAttribute,@134")
#pragma comment(linker, "/EXPORT:viEnableEvent=_AheadLib_viEnableEvent,@135")
#pragma comment(linker, "/EXPORT:viDisableEvent=_AheadLib_viDisableEvent,@136")
#pragma comment(linker, "/EXPORT:viDiscardEvents=_AheadLib_viDiscardEvents,@137")
#pragma comment(linker, "/EXPORT:viWaitOnEvent=_AheadLib_viWaitOnEvent,@138")
#pragma comment(linker, "/EXPORT:viInstallHandler=_AheadLib_viInstallHandler,@139")
#pragma comment(linker, "/EXPORT:viUninstallHandler=_AheadLib_viUninstallHandler,@140")
#pragma comment(linker, "/EXPORT:viOpenDefaultRM=_AheadLib_viOpenDefaultRM,@141")
#pragma comment(linker, "/EXPORT:viStatusDesc=_AheadLib_viStatusDesc,@142")
#pragma comment(linker, "/EXPORT:viTerminate=_AheadLib_viTerminate,@143")
#pragma comment(linker, "/EXPORT:viLock=_AheadLib_viLock,@144")
#pragma comment(linker, "/EXPORT:viUnlock=_AheadLib_viUnlock,@145")
#pragma comment(linker, "/EXPORT:viParseRsrc=_AheadLib_viParseRsrc,@146")
#pragma comment(linker, "/EXPORT:viParseRsrcEx=_AheadLib_viParseRsrcEx,@147")
#pragma comment(linker, "/EXPORT:Noname148=_AheadLib_Noname148,@148,NONAME")
#pragma comment(linker, "/EXPORT:Noname149=_AheadLib_Noname149,@149,NONAME")
#pragma comment(linker, "/EXPORT:Noname150=_AheadLib_Noname150,@150,NONAME")
#pragma comment(linker, "/EXPORT:Noname151=_AheadLib_Noname151,@151,NONAME")
#pragma comment(linker, "/EXPORT:Noname152=_AheadLib_Noname152,@152,NONAME")
#pragma comment(linker, "/EXPORT:Noname153=_AheadLib_Noname153,@153,NONAME")
#pragma comment(linker, "/EXPORT:Noname154=_AheadLib_Noname154,@154,NONAME")
#pragma comment(linker, "/EXPORT:Noname155=_AheadLib_Noname155,@155,NONAME")
#pragma comment(linker, "/EXPORT:Noname156=_AheadLib_Noname156,@156,NONAME")
#pragma comment(linker, "/EXPORT:Noname157=_AheadLib_Noname157,@157,NONAME")
#pragma comment(linker, "/EXPORT:Noname158=_AheadLib_Noname158,@158,NONAME")
#pragma comment(linker, "/EXPORT:Noname159=_AheadLib_Noname159,@159,NONAME")
#pragma comment(linker, "/EXPORT:Noname160=_AheadLib_Noname160,@160,NONAME")
#pragma comment(linker, "/EXPORT:Noname161=_AheadLib_Noname161,@161,NONAME")
#pragma comment(linker, "/EXPORT:Noname162=_AheadLib_Noname162,@162,NONAME")
#pragma comment(linker, "/EXPORT:Noname163=_AheadLib_Noname163,@163,NONAME")
#pragma comment(linker, "/EXPORT:Noname164=_AheadLib_Noname164,@164,NONAME")
#pragma comment(linker, "/EXPORT:Noname165=_AheadLib_Noname165,@165,NONAME")
#pragma comment(linker, "/EXPORT:Noname166=_AheadLib_Noname166,@166,NONAME")
#pragma comment(linker, "/EXPORT:Noname167=_AheadLib_Noname167,@167,NONAME")
#pragma comment(linker, "/EXPORT:Noname168=_AheadLib_Noname168,@168,NONAME")
#pragma comment(linker, "/EXPORT:Noname169=_AheadLib_Noname169,@169,NONAME")
#pragma comment(linker, "/EXPORT:Noname170=_AheadLib_Noname170,@170,NONAME")
#pragma comment(linker, "/EXPORT:Noname171=_AheadLib_Noname171,@171,NONAME")
#pragma comment(linker, "/EXPORT:Noname172=_AheadLib_Noname172,@172,NONAME")
#pragma comment(linker, "/EXPORT:Noname173=_AheadLib_Noname173,@173,NONAME")
#pragma comment(linker, "/EXPORT:Noname174=_AheadLib_Noname174,@174,NONAME")
#pragma comment(linker, "/EXPORT:Noname175=_AheadLib_Noname175,@175,NONAME")
#pragma comment(linker, "/EXPORT:Noname176=_AheadLib_Noname176,@176,NONAME")
#pragma comment(linker, "/EXPORT:Noname177=_AheadLib_Noname177,@177,NONAME")
#pragma comment(linker, "/EXPORT:Noname178=_AheadLib_Noname178,@178,NONAME")
#pragma comment(linker, "/EXPORT:Noname179=_AheadLib_Noname179,@179,NONAME")
#pragma comment(linker, "/EXPORT:Noname180=_AheadLib_Noname180,@180,NONAME")
#pragma comment(linker, "/EXPORT:Noname181=_AheadLib_Noname181,@181,NONAME")
#pragma comment(linker, "/EXPORT:Noname182=_AheadLib_Noname182,@182,NONAME")
#pragma comment(linker, "/EXPORT:Noname183=_AheadLib_Noname183,@183,NONAME")
#pragma comment(linker, "/EXPORT:Noname184=_AheadLib_Noname184,@184,NONAME")
#pragma comment(linker, "/EXPORT:Noname185=_AheadLib_Noname185,@185,NONAME")
#pragma comment(linker, "/EXPORT:Noname186=_AheadLib_Noname186,@186,NONAME")
#pragma comment(linker, "/EXPORT:Noname187=_AheadLib_Noname187,@187,NONAME")
#pragma comment(linker, "/EXPORT:Noname188=_AheadLib_Noname188,@188,NONAME")
#pragma comment(linker, "/EXPORT:Noname189=_AheadLib_Noname189,@189,NONAME")
#pragma comment(linker, "/EXPORT:Noname190=_AheadLib_Noname190,@190,NONAME")
#pragma comment(linker, "/EXPORT:Noname191=_AheadLib_Noname191,@191,NONAME")
#pragma comment(linker, "/EXPORT:Noname192=_AheadLib_Noname192,@192,NONAME")
#pragma comment(linker, "/EXPORT:Noname193=_AheadLib_Noname193,@193,NONAME")
#pragma comment(linker, "/EXPORT:Noname194=_AheadLib_Noname194,@194,NONAME")
#pragma comment(linker, "/EXPORT:Noname195=_AheadLib_Noname195,@195,NONAME")
#pragma comment(linker, "/EXPORT:Noname196=_AheadLib_Noname196,@196,NONAME")
#pragma comment(linker, "/EXPORT:Noname197=_AheadLib_Noname197,@197,NONAME")
#pragma comment(linker, "/EXPORT:Noname198=_AheadLib_Noname198,@198,NONAME")
#pragma comment(linker, "/EXPORT:Noname199=_AheadLib_Noname199,@199,NONAME")
#pragma comment(linker, "/EXPORT:viMove=_AheadLib_viMove,@200")
#pragma comment(linker, "/EXPORT:viMoveAsync=_AheadLib_viMoveAsync,@201")
#pragma comment(linker, "/EXPORT:viBufWrite=_AheadLib_viBufWrite,@202")
#pragma comment(linker, "/EXPORT:viBufRead=_AheadLib_viBufRead,@203")
#pragma comment(linker, "/EXPORT:viSPrintf=_AheadLib_viSPrintf,@204")
#pragma comment(linker, "/EXPORT:viVSPrintf=_AheadLib_viVSPrintf,@205")
#pragma comment(linker, "/EXPORT:viSScanf=_AheadLib_viSScanf,@206")
#pragma comment(linker, "/EXPORT:viVSScanf=_AheadLib_viVSScanf,@207")
#pragma comment(linker, "/EXPORT:viGpibControlREN=_AheadLib_viGpibControlREN,@208")
#pragma comment(linker, "/EXPORT:viVxiCommandQuery=_AheadLib_viVxiCommandQuery,@209")
#pragma comment(linker, "/EXPORT:viGpibControlATN=_AheadLib_viGpibControlATN,@210")
#pragma comment(linker, "/EXPORT:viGpibSendIFC=_AheadLib_viGpibSendIFC,@211")
#pragma comment(linker, "/EXPORT:viGpibCommand=_AheadLib_viGpibCommand,@212")
#pragma comment(linker, "/EXPORT:viGpibPassControl=_AheadLib_viGpibPassControl,@213")
#pragma comment(linker, "/EXPORT:viAssertUtilSignal=_AheadLib_viAssertUtilSignal,@214")
#pragma comment(linker, "/EXPORT:viAssertIntrSignal=_AheadLib_viAssertIntrSignal,@215")
#pragma comment(linker, "/EXPORT:viMapTrigger=_AheadLib_viMapTrigger,@216")
#pragma comment(linker, "/EXPORT:viUnmapTrigger=_AheadLib_viUnmapTrigger,@217")
#pragma comment(linker, "/EXPORT:viWriteFromFile=_AheadLib_viWriteFromFile,@218")
#pragma comment(linker, "/EXPORT:viReadToFile=_AheadLib_viReadToFile,@219")
#pragma comment(linker, "/EXPORT:viIn64=_AheadLib_viIn64,@220")
#pragma comment(linker, "/EXPORT:viOut64=_AheadLib_viOut64,@221")
#pragma comment(linker, "/EXPORT:viIn8Ex=_AheadLib_viIn8Ex,@222")
#pragma comment(linker, "/EXPORT:viOut8Ex=_AheadLib_viOut8Ex,@223")
#pragma comment(linker, "/EXPORT:viIn16Ex=_AheadLib_viIn16Ex,@224")
#pragma comment(linker, "/EXPORT:viOut16Ex=_AheadLib_viOut16Ex,@225")
#pragma comment(linker, "/EXPORT:viIn32Ex=_AheadLib_viIn32Ex,@226")
#pragma comment(linker, "/EXPORT:viOut32Ex=_AheadLib_viOut32Ex,@227")
#pragma comment(linker, "/EXPORT:viIn64Ex=_AheadLib_viIn64Ex,@228")
#pragma comment(linker, "/EXPORT:viOut64Ex=_AheadLib_viOut64Ex,@229")
#pragma comment(linker, "/EXPORT:viMoveIn64=_AheadLib_viMoveIn64,@230")
#pragma comment(linker, "/EXPORT:viMoveOut64=_AheadLib_viMoveOut64,@231")
#pragma comment(linker, "/EXPORT:viMoveIn8Ex=_AheadLib_viMoveIn8Ex,@232")
#pragma comment(linker, "/EXPORT:viMoveOut8Ex=_AheadLib_viMoveOut8Ex,@233")
#pragma comment(linker, "/EXPORT:viMoveIn16Ex=_AheadLib_viMoveIn16Ex,@234")
#pragma comment(linker, "/EXPORT:viMoveOut16Ex=_AheadLib_viMoveOut16Ex,@235")
#pragma comment(linker, "/EXPORT:viMoveIn32Ex=_AheadLib_viMoveIn32Ex,@236")
#pragma comment(linker, "/EXPORT:viMoveOut32Ex=_AheadLib_viMoveOut32Ex,@237")
#pragma comment(linker, "/EXPORT:viMoveIn64Ex=_AheadLib_viMoveIn64Ex,@238")
#pragma comment(linker, "/EXPORT:viMoveOut64Ex=_AheadLib_viMoveOut64Ex,@239")
#pragma comment(linker, "/EXPORT:viMoveEx=_AheadLib_viMoveEx,@240")
#pragma comment(linker, "/EXPORT:viMoveAsyncEx=_AheadLib_viMoveAsyncEx,@241")
#pragma comment(linker, "/EXPORT:viMapAddressEx=_AheadLib_viMapAddressEx,@242")
#pragma comment(linker, "/EXPORT:viMemAllocEx=_AheadLib_viMemAllocEx,@243")
#pragma comment(linker, "/EXPORT:viMemFreeEx=_AheadLib_viMemFreeEx,@244")
#pragma comment(linker, "/EXPORT:viPeek64=_AheadLib_viPeek64,@245")
#pragma comment(linker, "/EXPORT:viPoke64=_AheadLib_viPoke64,@246")
#pragma comment(linker, "/EXPORT:Noname247=_AheadLib_Noname247,@247,NONAME")
#pragma comment(linker, "/EXPORT:Noname248=_AheadLib_Noname248,@248,NONAME")
#pragma comment(linker, "/EXPORT:Noname249=_AheadLib_Noname249,@249,NONAME")
#pragma comment(linker, "/EXPORT:Noname250=_AheadLib_Noname250,@250,NONAME")
#pragma comment(linker, "/EXPORT:Noname251=_AheadLib_Noname251,@251,NONAME")
#pragma comment(linker, "/EXPORT:Noname252=_AheadLib_Noname252,@252,NONAME")
#pragma comment(linker, "/EXPORT:Noname253=_AheadLib_Noname253,@253,NONAME")
#pragma comment(linker, "/EXPORT:Noname254=_AheadLib_Noname254,@254,NONAME")
#pragma comment(linker, "/EXPORT:viVxiServantResponse=_AheadLib_viVxiServantResponse,@255")
#pragma comment(linker, "/EXPORT:viRead=_AheadLib_viRead,@256")
#pragma comment(linker, "/EXPORT:viWrite=_AheadLib_viWrite,@257")
#pragma comment(linker, "/EXPORT:viAssertTrigger=_AheadLib_viAssertTrigger,@258")
#pragma comment(linker, "/EXPORT:viReadSTB=_AheadLib_viReadSTB,@259")
#pragma comment(linker, "/EXPORT:viClear=_AheadLib_viClear,@260")
#pragma comment(linker, "/EXPORT:viIn16=_AheadLib_viIn16,@261")
#pragma comment(linker, "/EXPORT:viOut16=_AheadLib_viOut16,@262")
#pragma comment(linker, "/EXPORT:viMapAddress=_AheadLib_viMapAddress,@263")
#pragma comment(linker, "/EXPORT:viUnmapAddress=_AheadLib_viUnmapAddress,@264")
#pragma comment(linker, "/EXPORT:viPeek16=_AheadLib_viPeek16,@265")
#pragma comment(linker, "/EXPORT:viPoke16=_AheadLib_viPoke16,@266")
#pragma comment(linker, "/EXPORT:viSetBuf=_AheadLib_viSetBuf,@267")
#pragma comment(linker, "/EXPORT:viFlush=_AheadLib_viFlush,@268")
#pragma comment(linker, "/EXPORT:viPrintf=_AheadLib_viPrintf,@269")
#pragma comment(linker, "/EXPORT:viVPrintf=_AheadLib_viVPrintf,@270")
#pragma comment(linker, "/EXPORT:viScanf=_AheadLib_viScanf,@271")
#pragma comment(linker, "/EXPORT:viVScanf=_AheadLib_viVScanf,@272")
#pragma comment(linker, "/EXPORT:viIn8=_AheadLib_viIn8,@273")
#pragma comment(linker, "/EXPORT:viOut8=_AheadLib_viOut8,@274")
#pragma comment(linker, "/EXPORT:viPeek8=_AheadLib_viPeek8,@275")
#pragma comment(linker, "/EXPORT:viPoke8=_AheadLib_viPoke8,@276")
#pragma comment(linker, "/EXPORT:viReadAsync=_AheadLib_viReadAsync,@277")
#pragma comment(linker, "/EXPORT:viWriteAsync=_AheadLib_viWriteAsync,@278")
#pragma comment(linker, "/EXPORT:viQueryf=_AheadLib_viQueryf,@279")
#pragma comment(linker, "/EXPORT:viVQueryf=_AheadLib_viVQueryf,@280")
#pragma comment(linker, "/EXPORT:viIn32=_AheadLib_viIn32,@281")
#pragma comment(linker, "/EXPORT:viOut32=_AheadLib_viOut32,@282")
#pragma comment(linker, "/EXPORT:viMoveIn8=_AheadLib_viMoveIn8,@283")
#pragma comment(linker, "/EXPORT:viMoveOut8=_AheadLib_viMoveOut8,@284")
#pragma comment(linker, "/EXPORT:viMoveIn16=_AheadLib_viMoveIn16,@285")
#pragma comment(linker, "/EXPORT:viMoveOut16=_AheadLib_viMoveOut16,@286")
#pragma comment(linker, "/EXPORT:viMoveIn32=_AheadLib_viMoveIn32,@287")
#pragma comment(linker, "/EXPORT:viMoveOut32=_AheadLib_viMoveOut32,@288")
#pragma comment(linker, "/EXPORT:viPeek32=_AheadLib_viPeek32,@289")
#pragma comment(linker, "/EXPORT:viPoke32=_AheadLib_viPoke32,@290")
#pragma comment(linker, "/EXPORT:viMemAlloc=_AheadLib_viMemAlloc,@291")
#pragma comment(linker, "/EXPORT:viMemFree=_AheadLib_viMemFree,@292")
#pragma comment(linker, "/EXPORT:viUsbControlOut=_AheadLib_viUsbControlOut,@293")
#pragma comment(linker, "/EXPORT:viUsbControlIn=_AheadLib_viUsbControlIn,@294")
#pragma comment(linker, "/EXPORT:viPxiReserveTriggers=_AheadLib_viPxiReserveTriggers,@295")
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 宏定义
#define EXTERNC extern "C"
#define NAKED __declspec(naked)
#define EXPORT __declspec(dllexport)

#define ALCPP EXPORT NAKED
#define ALSTD EXTERNC EXPORT NAKED void __stdcall
#define ALCFAST EXTERNC EXPORT NAKED void __fastcall
#define ALCDECL EXTERNC NAKED void __cdecl
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AheadLib 命名空间
#define CMD_MAX_LEN 128
typedef struct
{
	TCHAR sLeft[CMD_MAX_LEN];
	TCHAR sRight[CMD_MAX_LEN];
}STRU_MAP_TRANSLATE;
STRU_MAP_TRANSLATE* g_pTranslate = NULL;
int g_nTranslate = 0;
char *strrstr(char *s, char *str)
{
    char *p; 
    int len = strlen(s);
    for (p = s + len - 1; p >= s; p--) {
        if ((*p == *str) && (memcmp(p, str, strlen(str)) == 0)) 
            return p;
    }   
    return NULL;
}
namespace AheadLib
{
	HMODULE m_hModule = NULL;	// 原始模块句柄
	DWORD m_dwReturn[168] = {0};	// 原始函数返回地址

	#define MAX_ALLSECTIONS 2048 //全部的段名 
	#define MAX_SECTION 260 //一个段名长度 
	#define MAX_ALLKEYS 60000 //全部的键名 
	#define MAX_KEY 260 //一个键名长度 
	BOOL LoadAllSection(TCHAR* m_sFileName, TCHAR* szSection)
	{
		int i; 
		int iPos=0; 
		int iMaxCount; 
		TCHAR chKeyNames[MAX_ALLKEYS]={0}; //总的提出来的字符串 
		TCHAR chKey[MAX_KEY]={0}; //提出来的一个键名 
		
		int a = GetPrivateProfileSection(szSection,chKeyNames,MAX_ALLKEYS,m_sFileName); 
		if (a == 0)
			return 0;
		for(i=0;i<MAX_ALLKEYS;i++) 
		{ 
			if (chKeyNames[i]==0) 
				if (chKeyNames[i]==chKeyNames[i+1]) 
					break; 
		} 
		
		iMaxCount=i+1; //要多一个0号元素。即找出全部字符串的结束部分。 
		if (g_pTranslate != NULL)
			delete[] g_pTranslate;
		
		char *pPos;
		STRU_MAP_TRANSLATE data;
		
		int iCnt = 0, iMaxCnt = 0;
		for (int i = 0; i < iMaxCount; i++)
		{
			if (chKeyNames[i] == '=')
				iMaxCnt++;
		}
		iMaxCnt++;
		g_pTranslate = new STRU_MAP_TRANSLATE[iMaxCnt];
		for(i=0;i<iMaxCount;i++) 
		{ 
			chKey[iPos++]=chKeyNames[i]; 
			if(chKeyNames[i]==0) 
			{ 
				memset(&data, 0, sizeof(STRU_MAP_TRANSLATE));
				pPos = strstr(chKey, "=");
				strcpy(data.sRight, pPos + 1);
				strncpy(data.sLeft, &chKey[0], pPos - &chKey[0]);
				g_pTranslate[iCnt++] = data;
				memset(chKey,0,MAX_KEY); 
				iPos=0; 
			} 		
		} 	
		return iCnt;
	}

	// 加载原始模块
	inline BOOL WINAPI Load()
	{
		TCHAR tzPath[MAX_PATH];
		TCHAR tzTemp[MAX_PATH * 2];

		GetSystemDirectory(tzPath, MAX_PATH);
		_tcscat(tzPath, _T("\\visa32.dll"));
		m_hModule = LoadLibrary(tzPath);
		
		if (m_hModule == NULL)
		{
			wsprintf(tzTemp, _T("无法加载 %s，程序无法正常运行。"), tzPath);
			LPVOID lpMsgBuf;
			
			DWORD dw = GetLastError(); 

			FormatMessage(
				FORMAT_MESSAGE_ALLOCATE_BUFFER | 
				FORMAT_MESSAGE_FROM_SYSTEM |
				FORMAT_MESSAGE_IGNORE_INSERTS,
				NULL,
				dw,
				MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),
				(LPTSTR) &lpMsgBuf,
				0, NULL );	


			//MessageBox(NULL, tzTemp, TEXT("AheadLib"), MB_ICONSTOP);
			FILE* ft = fopen("C:\\visa32_fail.txt", "w");
			fprintf(ft, "%s, %s, %s", "load library fail visa32.dll\n", tzTemp, lpMsgBuf);
			fclose(ft);			

			LocalFree(lpMsgBuf);
		}
		TCHAR path[MAX_PATH];
		TCHAR buf[MAX_PATH];
		::GetModuleFileName(NULL, path, MAX_PATH);
		TCHAR* p = strrstr(path, "\\");
		if (p != NULL)
		{
			*p = '\0';
			strcat(path, "\\gpib_cmd.ini");			
			g_nTranslate = LoadAllSection(path, "translate");
		}


		return (m_hModule != NULL);	
	}
		
	// 释放原始模块
	inline VOID WINAPI Free()
	{
		if (m_hModule)
		{
			FreeLibrary(m_hModule);
		}
	}

	// 获取原始函数地址
	FARPROC WINAPI GetAddress(PCSTR pszProcName)
	{
		FARPROC fpAddress;
		CHAR szProcName[16];
		TCHAR tzTemp[MAX_PATH];

		fpAddress = GetProcAddress(m_hModule, pszProcName);
		if (fpAddress == NULL)
		{
			if (HIWORD(pszProcName) == 0)
			{
				wsprintf(szProcName, "%d", pszProcName);
				pszProcName = szProcName;
			}

			wsprintf(tzTemp, TEXT("无法找到函数 %hs，程序无法正常运行。"), pszProcName);
			MessageBox(NULL, tzTemp, TEXT("AheadLib"), MB_ICONSTOP);
			ExitProcess(-2);
		}

		return fpAddress;
	}
}
using namespace AheadLib;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 入口函数
BOOL WINAPI DllMain(HMODULE hModule, DWORD dwReason, PVOID pvReserved)
{
	if (dwReason == DLL_PROCESS_ATTACH)
	{
		DisableThreadLibraryCalls(hModule);

		return Load();
	}
	else if (dwReason == DLL_PROCESS_DETACH)
	{
		Free();
	}

	return TRUE;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viGetDefaultRM(void)
{
	GetAddress("viGetDefaultRM");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viFindRsrc(void)
{
	GetAddress("viFindRsrc");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viFindNext(void)
{
	GetAddress("viFindNext");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viOpen(void)
{
	GetAddress("viOpen");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viClose(void)
{
	GetAddress("viClose");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viGetAttribute(void)
{
	GetAddress("viGetAttribute");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viSetAttribute(void)
{
	GetAddress("viSetAttribute");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viEnableEvent(void)
{
	GetAddress("viEnableEvent");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viDisableEvent(void)
{
	GetAddress("viDisableEvent");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viDiscardEvents(void)
{
	GetAddress("viDiscardEvents");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viWaitOnEvent(void)
{
	GetAddress("viWaitOnEvent");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viInstallHandler(void)
{
	GetAddress("viInstallHandler");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viUninstallHandler(void)
{
	GetAddress("viUninstallHandler");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viOpenDefaultRM(void)
{
	GetAddress("viOpenDefaultRM");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viStatusDesc(void)
{
	GetAddress("viStatusDesc");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viTerminate(void)
{
	GetAddress("viTerminate");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viLock(void)
{
	GetAddress("viLock");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viUnlock(void)
{
	GetAddress("viUnlock");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viParseRsrc(void)
{
	GetAddress("viParseRsrc");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viParseRsrcEx(void)
{
	GetAddress("viParseRsrcEx");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname148(void)
{
	GetAddress(MAKEINTRESOURCE(148));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname149(void)
{
	GetAddress(MAKEINTRESOURCE(149));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname150(void)
{
	GetAddress(MAKEINTRESOURCE(150));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname151(void)
{
	GetAddress(MAKEINTRESOURCE(151));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname152(void)
{
	GetAddress(MAKEINTRESOURCE(152));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname153(void)
{
	GetAddress(MAKEINTRESOURCE(153));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname154(void)
{
	GetAddress(MAKEINTRESOURCE(154));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname155(void)
{
	GetAddress(MAKEINTRESOURCE(155));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname156(void)
{
	GetAddress(MAKEINTRESOURCE(156));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname157(void)
{
	GetAddress(MAKEINTRESOURCE(157));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname158(void)
{
	GetAddress(MAKEINTRESOURCE(158));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname159(void)
{
	GetAddress(MAKEINTRESOURCE(159));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname160(void)
{
	GetAddress(MAKEINTRESOURCE(160));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname161(void)
{
	GetAddress(MAKEINTRESOURCE(161));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname162(void)
{
	GetAddress(MAKEINTRESOURCE(162));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname163(void)
{
	GetAddress(MAKEINTRESOURCE(163));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname164(void)
{
	GetAddress(MAKEINTRESOURCE(164));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname165(void)
{
	GetAddress(MAKEINTRESOURCE(165));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname166(void)
{
	GetAddress(MAKEINTRESOURCE(166));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname167(void)
{
	GetAddress(MAKEINTRESOURCE(167));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname168(void)
{
	GetAddress(MAKEINTRESOURCE(168));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname169(void)
{
	GetAddress(MAKEINTRESOURCE(169));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname170(void)
{
	GetAddress(MAKEINTRESOURCE(170));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname171(void)
{
	GetAddress(MAKEINTRESOURCE(171));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname172(void)
{
	GetAddress(MAKEINTRESOURCE(172));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname173(void)
{
	GetAddress(MAKEINTRESOURCE(173));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname174(void)
{
	GetAddress(MAKEINTRESOURCE(174));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname175(void)
{
	GetAddress(MAKEINTRESOURCE(175));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname176(void)
{
	GetAddress(MAKEINTRESOURCE(176));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname177(void)
{
	GetAddress(MAKEINTRESOURCE(177));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname178(void)
{
	GetAddress(MAKEINTRESOURCE(178));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname179(void)
{
	GetAddress(MAKEINTRESOURCE(179));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname180(void)
{
	GetAddress(MAKEINTRESOURCE(180));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname181(void)
{
	GetAddress(MAKEINTRESOURCE(181));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname182(void)
{
	GetAddress(MAKEINTRESOURCE(182));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname183(void)
{
	GetAddress(MAKEINTRESOURCE(183));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname184(void)
{
	GetAddress(MAKEINTRESOURCE(184));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname185(void)
{
	GetAddress(MAKEINTRESOURCE(185));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname186(void)
{
	GetAddress(MAKEINTRESOURCE(186));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname187(void)
{
	GetAddress(MAKEINTRESOURCE(187));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname188(void)
{
	GetAddress(MAKEINTRESOURCE(188));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname189(void)
{
	GetAddress(MAKEINTRESOURCE(189));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname190(void)
{
	GetAddress(MAKEINTRESOURCE(190));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname191(void)
{
	GetAddress(MAKEINTRESOURCE(191));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname192(void)
{
	GetAddress(MAKEINTRESOURCE(192));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname193(void)
{
	GetAddress(MAKEINTRESOURCE(193));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname194(void)
{
	GetAddress(MAKEINTRESOURCE(194));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname195(void)
{
	GetAddress(MAKEINTRESOURCE(195));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname196(void)
{
	GetAddress(MAKEINTRESOURCE(196));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname197(void)
{
	GetAddress(MAKEINTRESOURCE(197));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname198(void)
{
	GetAddress(MAKEINTRESOURCE(198));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname199(void)
{
	GetAddress(MAKEINTRESOURCE(199));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMove(void)
{
	GetAddress("viMove");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveAsync(void)
{
	GetAddress("viMoveAsync");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viBufWrite(void)
{
	GetAddress("viBufWrite");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viBufRead(void)
{
	GetAddress("viBufRead");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viSPrintf(void)
{
	GetAddress("viSPrintf");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viVSPrintf(void)
{
	GetAddress("viVSPrintf");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viSScanf(void)
{
	GetAddress("viSScanf");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viVSScanf(void)
{
	GetAddress("viVSScanf");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viGpibControlREN(void)
{
	GetAddress("viGpibControlREN");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viVxiCommandQuery(void)
{
	GetAddress("viVxiCommandQuery");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viGpibControlATN(void)
{
	GetAddress("viGpibControlATN");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viGpibSendIFC(void)
{
	GetAddress("viGpibSendIFC");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viGpibCommand(void)
{
	GetAddress("viGpibCommand");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viGpibPassControl(void)
{
	GetAddress("viGpibPassControl");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viAssertUtilSignal(void)
{
	GetAddress("viAssertUtilSignal");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viAssertIntrSignal(void)
{
	GetAddress("viAssertIntrSignal");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMapTrigger(void)
{
	GetAddress("viMapTrigger");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viUnmapTrigger(void)
{
	GetAddress("viUnmapTrigger");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viWriteFromFile(void)
{
	GetAddress("viWriteFromFile");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viReadToFile(void)
{
	GetAddress("viReadToFile");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viIn64(void)
{
	GetAddress("viIn64");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viOut64(void)
{
	GetAddress("viOut64");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viIn8Ex(void)
{
	GetAddress("viIn8Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viOut8Ex(void)
{
	GetAddress("viOut8Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viIn16Ex(void)
{
	GetAddress("viIn16Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viOut16Ex(void)
{
	GetAddress("viOut16Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viIn32Ex(void)
{
	GetAddress("viIn32Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viOut32Ex(void)
{
	GetAddress("viOut32Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viIn64Ex(void)
{
	GetAddress("viIn64Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viOut64Ex(void)
{
	GetAddress("viOut64Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveIn64(void)
{
	GetAddress("viMoveIn64");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveOut64(void)
{
	GetAddress("viMoveOut64");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveIn8Ex(void)
{
	GetAddress("viMoveIn8Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveOut8Ex(void)
{
	GetAddress("viMoveOut8Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveIn16Ex(void)
{
	GetAddress("viMoveIn16Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveOut16Ex(void)
{
	GetAddress("viMoveOut16Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveIn32Ex(void)
{
	GetAddress("viMoveIn32Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveOut32Ex(void)
{
	GetAddress("viMoveOut32Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveIn64Ex(void)
{
	GetAddress("viMoveIn64Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveOut64Ex(void)
{
	GetAddress("viMoveOut64Ex");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveEx(void)
{
	GetAddress("viMoveEx");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveAsyncEx(void)
{
	GetAddress("viMoveAsyncEx");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMapAddressEx(void)
{
	GetAddress("viMapAddressEx");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMemAllocEx(void)
{
	GetAddress("viMemAllocEx");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMemFreeEx(void)
{
	GetAddress("viMemFreeEx");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viPeek64(void)
{
	GetAddress("viPeek64");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viPoke64(void)
{
	GetAddress("viPoke64");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname247(void)
{
	GetAddress(MAKEINTRESOURCE(247));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname248(void)
{
	GetAddress(MAKEINTRESOURCE(248));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname249(void)
{
	GetAddress(MAKEINTRESOURCE(249));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname250(void)
{
	GetAddress(MAKEINTRESOURCE(250));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname251(void)
{
	GetAddress(MAKEINTRESOURCE(251));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname252(void)
{
	GetAddress(MAKEINTRESOURCE(252));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname253(void)
{
	GetAddress(MAKEINTRESOURCE(253));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_Noname254(void)
{
	GetAddress(MAKEINTRESOURCE(254));
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viVxiServantResponse(void)
{
	GetAddress("viVxiServantResponse");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viRead(void)
{

	GetAddress("viRead");
	__asm JMP EAX;

}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



unsigned long addr_sz ;
TCHAR* g_pSzOut;
int sendLen = 0;
TCHAR szTmp[MAX_PATH];
int iLoop = 0;
TCHAR szCmd[MAX_PATH];
TCHAR szParam[MAX_PATH];
BOOL m_bFlag = TRUE;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viWrite(void)
{
#if 1

	//获取参数
	__asm
	{
		mov eax, [esp+8]
		mov addr_sz, eax
	}
	memset(szTmp, 0, MAX_PATH);
	strcpy(szTmp, (TCHAR*)addr_sz);
	for (iLoop = 0; iLoop < strlen(szTmp); iLoop++)
	{
		if (szTmp[iLoop] == '\r' || szTmp[iLoop] == '\n')
		{
			szTmp[iLoop] = '\0';
		}
	}

	g_pSzOut = strchr(szTmp, ' ');
	iLoop = g_pSzOut - &szTmp[0];
	if (iLoop != -1 && iLoop + 1 < strlen(szTmp))
	{
		strcpy(szParam, &szTmp[iLoop + 1]);
		strncpy(szCmd, &szTmp[0], iLoop);
		szCmd[iLoop] = '\0';
	}
	else
	{
		strcpy(szCmd, szTmp);
		strcpy(szParam, "");
	}
	
	m_bFlag = FALSE;

	for (iLoop = 0; iLoop < g_nTranslate; iLoop++)
	{
		if (strcmp(g_pTranslate[iLoop].sLeft, szCmd) == 0)
		{
			memset(szTmp, 0, sizeof(MAX_PATH));
			if (strcmp(szParam, "") == 0)
			{
				strcpy(szTmp, g_pTranslate[iLoop].sRight);
			}
			else
			{
				sprintf(szTmp, "%s %s", g_pTranslate[iLoop].sRight, szParam);
			}
			
			g_pSzOut = &szTmp[0];
			sendLen = strlen(g_pSzOut);
			m_bFlag = TRUE;
			break;
		}
	}
	if (!m_bFlag)
	{
		memset(szTmp, 0, sizeof(MAX_PATH));
		if (strcmp(szParam, "") == 0)
		{
			sprintf(szTmp, "WZKT:%s", szCmd);
		}
		else
		{
			sprintf(szTmp, "WZKT:%s %s", szCmd, szParam);
		}
		
		g_pSzOut = &szTmp[0];
		sendLen = strlen(g_pSzOut);
	}
	//修改参数
	__asm
	{
		mov eax, g_pSzOut
		mov [esp+8], eax
		mov eax, sendLen
		mov [esp+12], eax
	}
#endif

	
	GetAddress("viWrite");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viAssertTrigger(void)
{
	GetAddress("viAssertTrigger");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viReadSTB(void)
{
	GetAddress("viReadSTB");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viClear(void)
{
	GetAddress("viClear");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viIn16(void)
{
	GetAddress("viIn16");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viOut16(void)
{
	GetAddress("viOut16");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMapAddress(void)
{
	GetAddress("viMapAddress");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viUnmapAddress(void)
{
	GetAddress("viUnmapAddress");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viPeek16(void)
{
	GetAddress("viPeek16");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viPoke16(void)
{
	GetAddress("viPoke16");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viSetBuf(void)
{
	GetAddress("viSetBuf");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viFlush(void)
{
	GetAddress("viFlush");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viPrintf(void)
{
	GetAddress("viPrintf");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viVPrintf(void)
{
	GetAddress("viVPrintf");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viScanf(void)
{
	GetAddress("viScanf");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viVScanf(void)
{
	GetAddress("viVScanf");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viIn8(void)
{
	GetAddress("viIn8");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viOut8(void)
{
	GetAddress("viOut8");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viPeek8(void)
{
	GetAddress("viPeek8");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viPoke8(void)
{
	GetAddress("viPoke8");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viReadAsync(void)
{
	GetAddress("viReadAsync");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viWriteAsync(void)
{
	GetAddress("viWriteAsync");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viQueryf(void)
{
	GetAddress("viQueryf");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viVQueryf(void)
{
	GetAddress("viVQueryf");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viIn32(void)
{
	GetAddress("viIn32");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viOut32(void)
{
	GetAddress("viOut32");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveIn8(void)
{
	GetAddress("viMoveIn8");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveOut8(void)
{
	GetAddress("viMoveOut8");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveIn16(void)
{
	GetAddress("viMoveIn16");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveOut16(void)
{
	GetAddress("viMoveOut16");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveIn32(void)
{
	GetAddress("viMoveIn32");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMoveOut32(void)
{
	GetAddress("viMoveOut32");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viPeek32(void)
{
	GetAddress("viPeek32");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viPoke32(void)
{
	GetAddress("viPoke32");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMemAlloc(void)
{
	GetAddress("viMemAlloc");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viMemFree(void)
{
	GetAddress("viMemFree");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viUsbControlOut(void)
{
	GetAddress("viUsbControlOut");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viUsbControlIn(void)
{
	GetAddress("viUsbControlIn");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 导出函数
ALCDECL AheadLib_viPxiReserveTriggers(void)
{
	GetAddress("viPxiReserveTriggers");
	__asm JMP EAX;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
